services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - PHP_VERSION=${PHP_VERSION}
    image: ${APP_NAME}-backend
    container_name: ${APP_NAME}-backend
    working_dir: /var/www/api/
    volumes:
      - ./:/var/www/api/
    networks:
      - app-network

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=${NODE_VERSION}
    image: ${APP_NAME}-frontend
    container_name: ${APP_NAME}-frontend
    volumes:
      - /app/node_modules
      - ../frontend:/var/www/html/
    networks:
      - app-network

  webserver:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: ${APP_NAME}-webserver
    container_name: ${APP_NAME}-webserver
    volumes:
      - ./:/var/www/api/
    ports:
      - "80:80"
    networks:
      - app-network
    depends_on:
      - backend
      - frontend

  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: ${APP_NAME}-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./mysql/volumes:/var/lib/mysql
    ports:
      - "8987:3306"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
